{"version":3,"sources":["Components/Home/Home.jsx","Components/Login/Login.jsx","Components/Navbar/Navbar.jsx","Components/ProtectedRoutes/ProtectedRoutes.jsx","Components/Register/Register.jsx","App.js","reportWebVitals.js","index.js"],"names":["Home","userID","useState","notes","setNotes","again","setAgain","noteId","setNoteId","token","localStorage","getItem","useEffect","getAllNotes","decoded","jwt_decode","_id","error","clear","to","notesData","title","desc","a","axios","get","headers","data","message","Notes","console","log","e","preventDefault","target","reset","post","Math","random","getNotes","name","value","put","id","delete","className","data-toggle","data-target","aria-labelledby","aria-hidden","onSubmit","type","data-dismiss","aria-label","onKeyUp","placeholder","map","note","index","onClick","deleteNote","onChange","Login","props","user","email","password","getUser","setItem","history","replace","Navbar","pathname","useLocation","href","aria-controls","aria-expanded","first_name","ProductedRoutes","Register","last_name","age","getFormData","push","App","path","component","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.debfa1bc.chunk.js","sourcesContent":["import axios from 'axios'\r\nimport React , {useState , useEffect} from 'react'\r\nimport { Redirect } from 'react-router-dom';\r\nimport jwt_decode from \"jwt-decode\";\r\nconst Home = () => {\r\n    const [notes, setNotes] = useState([])\r\n    const [again ,setAgain] = useState(0)\r\n    const [noteId ,setNoteId] = useState(\"\")\r\n    let token = localStorage.getItem(\"token\");\r\n    let userID;\r\n    \r\n    useEffect(() => {\r\n        getAllNotes()\r\n    }, [])\r\n    useEffect(() => {\r\n        getAllNotes()\r\n    }, [again])\r\n    try {\r\n        let decoded = jwt_decode(token);\r\n        userID = decoded._id;\r\n    } catch (error) {\r\n        localStorage.clear();\r\n        return <Redirect to = \"/login\" />\r\n    }\r\n    let notesData = {\r\n        title : \"\" ,\r\n        desc : \"\" ,\r\n        userID : userID ,\r\n        token : token\r\n    }\r\n\r\n    async function getAllNotes() {\r\n        let {data} = await axios.get(\"https://route-egypt-api.herokuapp.com/getUserNotes\",{\r\n            headers: {\r\n                userID , \r\n                token\r\n            }\r\n        })\r\n        if(data.message === \"success\") {\r\n            setNotes(data.Notes);\r\n            console.log(notes)\r\n        }\r\n    }\r\n     async function sendData(e) {\r\n         e.preventDefault();\r\n         e.target.reset();\r\n        let {data} = await axios.post(\"https://route-egypt-api.herokuapp.com/addNote\",notesData)\r\n        if(data.message === \"success\") {\r\n            setAgain(Math.random());\r\n        }\r\n    }\r\n    function getNotes({target}) {\r\n        notesData[target.name] = target.value;\r\n    }\r\n    async function editNote(e) {\r\n        e.preventDefault();\r\n        e.target.reset();\r\n        let {data} = await axios.put(\"https://route-egypt-api.herokuapp.com/updateNote\",{\r\n                \"title\" : notesData.title , \r\n                \"desc\" : notesData.desc ,\r\n                \"NoteID\" : noteId ,\r\n                \"token\" : token\r\n            \r\n        })\r\n        if(data.message === \"updated\") {\r\n            setAgain(Math.random());\r\n        }\r\n    }\r\n    async function deleteNote(id) {\r\n        let {data} = await axios.delete(\"https://route-egypt-api.herokuapp.com/deleteNote\",{\r\n            data:{\r\n                \"NoteID\" : id ,\r\n                \"token\" : token\r\n            }\r\n        })\r\n        if(data.message === \"deleted\") {\r\n            setAgain(Math.random());\r\n        }\r\n    } \r\n    return (\r\n        <>\r\n           <div className=\"container my-5\">\r\n        <div className=\"col-md-12 m-auto text-right\">\r\n            <a className=\"add p-2 btn\" data-toggle=\"modal\" data-target=\"#exampleModal\"><i className=\"fas fa-plus-circle\"></i> Add\r\n        New</a>\r\n        </div>\r\n    </div>\r\n\r\n\r\n    {/* <!-- Modal --> */}\r\n    <div className=\"modal fade\" id=\"exampleModal\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n       \r\n            <div className=\"modal-dialog\">\r\n                <form onSubmit = {sendData}>\r\n                <div className=\"modal-content\">\r\n                    <div className=\"modal-header\">\r\n                        <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n              <span aria-hidden=\"true\">&times;</span>\r\n            </button>\r\n                    </div>\r\n                    <div className=\"modal-body\">\r\n                        <input onKeyUp = {getNotes} name = \"title\" placeholder=\"Type Title\" name=\"title\" className=\"form-control\" type=\"text\"/>\r\n                        <textarea onKeyUp = {getNotes} name = \"desc\" className=\"form-control my-2\" placeholder=\"Type your note\" name=\"desc\" id=\"\" cols=\"30\" rows=\"10\"></textarea>\r\n                    </div>\r\n                    <div className=\"modal-footer\">\r\n                        <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n                        <button type = \"submit\" className=\"btn btn-info\"><i className=\"fas fa-plus-circle\"></i> Add Note</button>\r\n                    </div>\r\n                </div>\r\n                </form>\r\n            </div>\r\n      \r\n    </div>\r\n\r\n\r\n\r\n    {/* <!-- ==========================Notes=============================== --> */}\r\n\r\n    <div className=\"container\">\r\n        <div className=\"row\">\r\n            {notes.map((note,index)=>{\r\n                return(\r\n                    <div className=\"col-md-4 my-4\" key = {index}>\r\n                        <div className=\"note p-4\">\r\n                            <h3 className=\"float-left\">{note.title}</h3>\r\n                            <a data-toggle=\"modal\" data-target=\"#exampleModal2\" onClick = {()=>setNoteId(note._id)}><i className=\"fas fa-edit float-right edit\"></i></a>\r\n                            <a onClick = {()=>deleteNote(note._id)}> <i className=\"fas fa-trash-alt float-right px-3 del\"></i></a>\r\n                            <span className=\"clearfix\"></span>\r\n                            <p>{note.desc}</p>\r\n                        </div>\r\n                </div>\r\n                \r\n                );\r\n            })}\r\n        </div>\r\n            {/* <!-- update Modal --> */}\r\n        <div className=\"modal fade\" id=\"exampleModal2\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n            <div className=\"modal-dialog\">\r\n                <form onSubmit = {editNote}>\r\n                <div className=\"modal-content\">\r\n                    <div className=\"modal-header\">\r\n                        <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                            <span aria-hidden=\"true\">&times;</span>\r\n                        </button>\r\n                    </div>\r\n                    <div className=\"modal-body\">\r\n                        <input onChange = {getNotes}  name = \"title\" placeholder=\"Type Title\" name=\"title\" className=\"form-control\" type=\"text\"/>\r\n                        <textarea onChange = {getNotes}  name = \"desc\" className=\"form-control my-2\" placeholder=\"Type your note\" name=\"desc\" id=\"\" cols=\"30\" rows=\"10\"></textarea>\r\n                    </div>\r\n                    <div className=\"modal-footer\">\r\n                        <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n                        <button type = \"submit\" className=\"btn btn-info\"><i className=\"fas fa-plus-circle\"></i> Edit Note</button>\r\n                    </div>\r\n                </div>\r\n                </form>\r\n            </div>\r\n        \r\n        </div>\r\n    </div>\r\n    </>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","import axios from 'axios';\r\nimport React from 'react'\r\n\r\nconst Login = (props) => {\r\n    let user = {\r\n        email : \"\" , \r\n        password : \"\"\r\n    }\r\n    function getUser({target})\r\n    {\r\n        user[target.name] = target.value;\r\n    }\r\n\r\n    async function sendData()\r\n    {\r\n        let {data} = await axios.post(\"https://route-egypt-api.herokuapp.com/signin\",user);\r\n        if(data.message === \"success\") {\r\n            localStorage.setItem(\"token\" , data.token);\r\n            props.history.replace(\"/home\");\r\n        } else {\r\n           localStorage.clear();\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n             <div className=\"container my-5 py-5\">\r\n        <div className=\"col-md-5 m-auto text-center\">\r\n            \r\n                <div className=\"form-group mb-3\">\r\n                    <input onKeyUp = {getUser} placeholder=\"Enter email\" name=\"email\" type=\"email\" className=\"form-control\" />\r\n                </div>\r\n                <div className=\"form-group mb-3\">\r\n                    <input onKeyUp = {getUser} placeholder=\"confirm Password\" name=\"password\" type=\"password\" className=\"form-control\" />\r\n                </div>\r\n                <button onClick = {sendData} type=\"submit\" className=\"btn btn-info w-100\">SignIn</button>\r\n            \r\n        </div>\r\n    </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","import React from 'react'\r\nimport { NavLink, useLocation , Redirect } from 'react-router-dom'\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\nconst Navbar = () => {\r\n    let {pathname} = useLocation();\r\n    let decoded;\r\n    let token;\r\n    try {\r\n      token = localStorage.getItem(\"token\");\r\n      decoded = jwt_decode(token);\r\n    } catch (error) {\r\n        localStorage.clear();\r\n    }\r\n\r\n    function logOut()\r\n    {\r\n        localStorage.clear();\r\n    }\r\n    return (\r\n        <>\r\n            <nav className=\"navbar navbar-expand-lg navbar-dark\">\r\n        <div className=\"container\">\r\n            <a className=\"navbar-brand\" href=\"/\">Notes</a>\r\n            <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n            <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n                {pathname !== \"/home\" && !token ? <ul className=\"navbar-nav ml-auto\">\r\n                    <li className=\"nav-item\">\r\n                        <NavLink className=\"nav-link\" to=\"/register\">Register</NavLink>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <NavLink className=\"nav-link\" to=\"/login\">Login</NavLink>\r\n                    </li>\r\n                </ul> : <ul className=\"navbar-nav ml-auto\">\r\n                <li className=\"nav-item\">\r\n                    {decoded ? <span>{decoded.first_name}</span> : null}\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <NavLink onClick = {logOut} className=\"nav-link\" to=\"/login\">Logout</NavLink>\r\n                    </li>\r\n                </ul>}\r\n            </div>\r\n        </div>\r\n    </nav>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Navbar\r\n","import jwt_decode from \"jwt-decode\";\r\nimport { Redirect , Route } from \"react-router-dom\";\r\n\r\n\r\nconst ProductedRoutes = (props) => {\r\n    let token = localStorage.getItem(\"token\");\r\n    try {\r\n        let decoded = jwt_decode(token);\r\n    } catch (error) {\r\n        localStorage.clear();\r\n        return <Redirect to = \"/login\" />\r\n    }\r\n    if(token) {\r\n        return <Route {...props}/>\r\n    } \r\n}\r\n\r\nexport default ProductedRoutes\r\n","import axios from 'axios';\r\nimport React from 'react'\r\n\r\n\r\nconst Register = (props) => {\r\n    \r\nlet user = {\r\n    first_name : \"\" ,\r\n    last_name : \"\" , \r\n    email : \"\" ,\r\n    password : \"\" ,\r\n    age : \"\"\r\n\r\n}\r\n\r\nfunction getFormData({target})\r\n{\r\n    user[target.name] = target.value;\r\n}\r\n\r\nasync function signUp()\r\n{\r\n    let {data} = await axios.post(\"https://route-egypt-api.herokuapp.com/signup\",user);\r\n    if(data.message === \"success\") {\r\n        props.history.push(\"/login\");\r\n    }\r\n}\r\n\r\n    return (\r\n    <>\r\n        <div className=\"container my-5 py-5\">\r\n            <div className=\"col-md-5 m-auto text-center\">\r\n                <div className=\"form-group mb-3\">\r\n                    <input onKeyUp = {getFormData} name = \"first_name\" placeholder=\"Enter your first name\" type=\"text\" className=\" form-control\" />\r\n                </div>\r\n                <div className=\"form-group mb-3\">\r\n                    <input onKeyUp = {getFormData} name = \"last_name\" placeholder=\"Enter your last name\" type=\"text\" className=\" form-control\" />\r\n                </div>\r\n                <div className=\"form-group mb-3\">\r\n                    <input onKeyUp = {getFormData} placeholder=\"Enter email\" type=\"email\" name=\"email\" className=\"form-control\" />\r\n                </div>\r\n                <div className=\"form-group mb-3\">\r\n                    <input onKeyUp = {getFormData} placeholder=\"Enter you password\" type=\"password\" name=\"password\" className=\"form-control\" />\r\n                </div>\r\n                <div className=\"form-group mb-3\">\r\n                    <input onKeyUp = {getFormData} placeholder=\"Enter your age\" name = \"age\" type=\"number\" className=\"form-control\" />\r\n                </div>\r\n                <button onClick = {signUp} type=\"submit\" className=\"btn mt-3 btn-info w-100\">SignUp</button>\r\n            </div>\r\n        </div>\r\n    </>\r\n    )\r\n}\r\n\r\nexport default Register\r\n","import { Route, Switch , Redirect } from 'react-router-dom';\nimport './App.css';\nimport Home from './Components/Home/Home';\nimport Login from './Components/Login/Login';\nimport Navbar from './Components/Navbar/Navbar';\nimport ProductedRoutes from './Components/ProtectedRoutes/ProtectedRoutes';\nimport Register from './Components/Register/Register';\n\nfunction App() {\n  return (\n    <>\n    <Navbar/>\n    <Switch>\n      <ProductedRoutes path = \"/home\" component = {Home} />\n      <Route path = \"/register\" component = {Register}/>\n      <Route path = \"/login\" component = {Login} />\n      <Route path = \"/\" exact component = {Login} />\n      <Redirect to = \"/\" />\n    </Switch>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"jquery/dist/jquery.min.js\";\nimport \"popper.js/dist/umd/popper.min.js\";\nimport \"bootstrap/dist/js/bootstrap.min.js\";\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}